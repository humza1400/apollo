version: 2
jobs:
  jdk8:
    working_directory: ~/apollo
    docker:
      - image: maven:3-jdk-8
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ checksum "pom.xml" }}
      - run:
          command: mvn --fail-never dependency:go-offline clean compile || true
          environment:
            MAVEN_OPTS: -Xmx512m
      - save_cache:
          key: v1-deps-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
      - run:
          command: mvn verify
          environment:
            MAVEN_OPTS: -Xmx768m

  jdk11:
    working_directory: ~/apollo
    docker:
      - image: maven:3-jdk-11
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-jdk11-{{ checksum "pom.xml" }}
      - run: 
          command: mvn dependency:go-offline clean install -DskipTests || true
          environment:
            MAVEN_OPTS: -Xmx512m
      - save_cache:
          key: v1-deps-jdk11-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
      - run:
          name: Run test without NonDex
          command: mvn -pl apollo-api-impl test -Dtest=com.spotify.apollo.route.MiddlewaresTest#asShouldSerializeObjectAsJson
      - run:
          name: Run test with NonDex
          command: mvn -pl apollo-api-impl edu.illinois:nondex-maven-plugin:2.1.1:nondex -Dtest=com.spotify.apollo.route.MiddlewaresTest#asShouldSerializeObjectAsJson
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

  jdk13:
    working_directory: ~/apollo
    docker:
      - image: maven:3-jdk-13
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-jdk13-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline clean compile || true
      - save_cache:
          key: v1-deps-jdk13-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
      - run:
          command: mvn verify
          environment:
            MAVEN_OPTS: -Xmx512m

workflows:
  version: 2
  build:
    jobs:
      - jdk8
      - jdk11
      - jdk13
